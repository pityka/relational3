import com.typesafe.tools.mima.core._

inThisBuild(
  List(
    homepage := Some(url("https://pityka.github.io/")),
    licenses := List(("MIT", url("https://opensource.org/licenses/MIT"))),
    developers := List(
      Developer(
        "pityka",
        "Istvan Bartha",
        "bartha.pityu@gmail.com",
        url("https://github.com/pityka/relational3")
      )
    )
  )
)

lazy val scalaVersion213 = "2.13.14"
lazy val scalaVersion3 = "3.6.4"
lazy val scalaVersionInBuild = scalaVersion3

ThisBuild / versionScheme := Some("early-semver")

ThisBuild / versionPolicyIntention := Compatibility.None
ThisBuild / versionPolicyIgnoredInternalDependencyVersions := Some(
  raw"^\d+\.\d+\.\d+\+\d+".r
) // Support for versions generated by sbt-dynver

lazy val commonSettings = Seq(
  crossScalaVersions := Seq(scalaVersion3),
  scalaVersion := scalaVersionInBuild,
  Test / parallelExecution := false,
  scalacOptions ++= (CrossVersion.partialVersion(scalaVersion.value) match {
    case Some((3, _)) =>
      Seq(
        "-deprecation", // Emit warning and location for usages of deprecated APIs.
        "-encoding",
        "utf-8", // Specify character encoding used by source files.
        "-feature", // Emit warning and location for usages of features that should be imported explicitly.
        "-language:postfixOps",
        "-no-indent",
        "-explain",
        "-experimental", // needed for some macros
        "-language:experimental.namedTuples",
        "-unchecked", // Enable additional warnings where generated code depends on assumptions.
        // "-Ycheck:all",
        // "-Ydebug-trace",
        // "-Yexplain-lowlevel",
        // "-Yprint-debug",
        "-Xfatal-warnings" // Fail the compilation if there are any warnings.
      )
    case _ => ???
  }),
  Compile / console / scalacOptions ~= (_ filterNot (_ == "-Xfatal-warnings"))
) ++ Seq(
  organization := "io.github.pityka",
  licenses += ("MIT", url("https://opensource.org/licenses/MIT")),
  Global / cancelable := true,
  fork := true,
  javaOptions += "-Xmx4G"
)


lazy val specs = List(
  ("org.specs2" %% "specs2-core" % "4.14.1-cross" % "test"),
  ("org.specs2" %% "specs2-scalacheck" % "4.14.1-cross" % "test")
)

lazy val root = project
  .in(file("."))
  .settings(commonSettings: _*)
  .settings(
    publishArtifact := false,
    publish / skip := true
  )
  .aggregate(core)

lazy val core = project
  .in(file("core"))
  .settings(commonSettings: _*)
  .settings(
    name := "ra3-core",
    libraryDependencies ++= List(
      "io.airlift" % "aircompressor" % "0.25",
      "org.scalameta" %% "munit" % "1.0.0-M10" % Test,
      "io.github.pityka" %% "saddle-core" % "4.0.0-M11",
      "io.github.pityka" %% "tasks-core" % "4.0.0-M7",
      "com.google.guava" % "guava" % "33.0.0-jre", // scala-steward:off
      "de.lhns" %% "fs2-compress-gzip" % "1.0.0",
      "com.github.plokhotnyuk.jsoniter-scala" %% "jsoniter-scala-macros" % "2.30.13" % "compile-internal"
    ) ++ specs
  )
